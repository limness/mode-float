"""add_file_table

Revision ID: 90ae82e041a4
Revises: 8a6cc7f6a0d5
Create Date: 2025-09-28 23:25:47.217651

"""
from typing import Sequence, Union
import geoalchemy2
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '90ae82e041a4'
down_revision: Union[str, None] = '8a6cc7f6a0d5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file_metadata',
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=256), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('message', sa.String(length=128), nullable=False),
    sa.Column('sheet_names', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('file_id')
    )
    op.add_column('regions', sa.Column('geopolygon_str', sa.Text(), nullable=False))
    op.alter_column('regions', 'geopolygon',
               existing_type=sa.TEXT(),
               type_=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False),
               existing_nullable=False)
    op.create_index('idx_regions_geopolygon', 'regions', ['geopolygon'], unique=False, postgresql_using='gist')
    op.add_column('uav_flights', sa.Column('file_id', sa.UUID(), nullable=True))
    op.add_column('uav_flights', sa.Column('takeoff_point', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True))
    op.add_column('uav_flights', sa.Column('landing_point', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True))
    op.add_column('uav_flights', sa.Column('coordinates', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True))
    # op.create_index('idx_uav_flights_coordinates', 'uav_flights', ['coordinates'], unique=False, postgresql_using='gist')
    # op.create_index('idx_uav_flights_landing_point', 'uav_flights', ['landing_point'], unique=False, postgresql_using='gist')
    # op.create_index('idx_uav_flights_takeoff_point', 'uav_flights', ['takeoff_point'], unique=False, postgresql_using='gist')
    op.create_foreign_key(None, 'uav_flights', 'file_metadata', ['file_id'], ['file_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'uav_flights', type_='foreignkey')
    op.drop_index('idx_uav_flights_takeoff_point', table_name='uav_flights', postgresql_using='gist')
    op.drop_index('idx_uav_flights_landing_point', table_name='uav_flights', postgresql_using='gist')
    op.drop_index('idx_uav_flights_coordinates', table_name='uav_flights', postgresql_using='gist')
    op.drop_column('uav_flights', 'coordinates')
    op.drop_column('uav_flights', 'landing_point')
    op.drop_column('uav_flights', 'takeoff_point')
    op.drop_column('uav_flights', 'file_id')
    op.drop_index('idx_regions_geopolygon', table_name='regions', postgresql_using='gist')
    op.alter_column('regions', 'geopolygon',
               existing_type=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('regions', 'geopolygon_str')
    op.drop_table('file_metadata')
    # ### end Alembic commands ###
