"""init

Revision ID: e37f40e4e50f
Revises: 
Create Date: 2025-09-23 19:44:35.913339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e37f40e4e50f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('uav_flights',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flight_id', sa.String(length=128), nullable=False),
    sa.Column('uav_type', sa.String(length=64), nullable=False),
    sa.Column('takeoff_lat', sa.Float(), nullable=False),
    sa.Column('takeoff_lon', sa.Float(), nullable=False),
    sa.Column('landing_lat', sa.Float(), nullable=False),
    sa.Column('landing_lon', sa.Float(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_min', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=128), nullable=True),
    sa.Column('takeoff_region', sa.String(length=128), nullable=True),
    sa.Column('landing_region', sa.String(length=128), nullable=True),
    sa.Column('gc_distance_km', sa.Float(), nullable=True),
    sa.Column('avg_speed_kmh', sa.Float(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('dow', sa.Integer(), nullable=True),
    sa.Column('hour', sa.Integer(), nullable=True),
    sa.Column('is_weekend', sa.Boolean(), nullable=True),
    sa.Column('is_holiday', sa.Boolean(), nullable=True),
    sa.CheckConstraint('(dow IS NULL) OR (dow BETWEEN 0 AND 6)', name='ck_dow_range'),
    sa.CheckConstraint('(hour IS NULL) OR (hour BETWEEN 0 AND 23)', name='ck_hour_range'),
    sa.CheckConstraint('(month IS NULL) OR (month BETWEEN 1 AND 12)', name='ck_month_range'),
    sa.CheckConstraint('duration_min >= 0', name='ck_duration_non_negative'),
    sa.CheckConstraint('landing_lat >= -90 AND landing_lat <= 90', name='ck_landing_lat_range'),
    sa.CheckConstraint('landing_lon >= -180 AND landing_lon <= 180', name='ck_landing_lon_range'),
    sa.CheckConstraint('takeoff_lat >= -90 AND takeoff_lat <= 90', name='ck_takeoff_lat_range'),
    sa.CheckConstraint('takeoff_lon >= -180 AND takeoff_lon <= 180', name='ck_takeoff_lon_range'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('flight_id')
    )
    op.create_index('ix_uav_flights_landing_point_gist', 'uav_flights', [sa.literal_column('point(CAST(landing_lon AS FLOAT), CAST(landing_lat AS FLOAT))')], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_uav_flights_started_at'), 'uav_flights', ['started_at'], unique=False)
    op.create_index('ix_uav_flights_takeoff_point_gist', 'uav_flights', [sa.literal_column('point(CAST(takeoff_lon AS FLOAT), CAST(takeoff_lat AS FLOAT))')], unique=False, postgresql_using='gist')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_uav_flights_takeoff_point_gist', table_name='uav_flights', postgresql_using='gist')
    op.drop_index(op.f('ix_uav_flights_started_at'), table_name='uav_flights')
    op.drop_index('ix_uav_flights_landing_point_gist', table_name='uav_flights', postgresql_using='gist')
    op.drop_table('uav_flights')
    # ### end Alembic commands ###
