"""init

Revision ID: 8a6cc7f6a0d5
Revises: 
Create Date: 2025-09-28 17:51:21.290833

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8a6cc7f6a0d5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('area', sa.Integer(), nullable=False),
    sa.Column('geopolygon', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('uav_flights',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flight_id', sa.String(length=64), nullable=True),
    sa.Column('uav_type', sa.String(length=64), nullable=True),
    sa.Column('takeoff_lat', sa.Float(), nullable=True),
    sa.Column('takeoff_lon', sa.Float(), nullable=True),
    sa.Column('landing_lat', sa.Float(), nullable=True),
    sa.Column('landing_lon', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('takeoff_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('landing_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('city', sa.String(length=128), nullable=True),
    sa.Column('major_region_id', sa.Integer(), nullable=True),
    sa.Column('takeoff_region_id', sa.Integer(), nullable=True),
    sa.Column('landing_region_id', sa.Integer(), nullable=True),
    sa.Column('distance_km', sa.Float(), nullable=True),
    sa.Column('average_speed_kmh', sa.Float(), nullable=True),
    sa.CheckConstraint('duration_minutes >= 0', name='ck_duration_non_negative'),
    sa.ForeignKeyConstraint(['landing_region_id'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['major_region_id'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['takeoff_region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('flight_id')
    )
    op.create_index(op.f('ix_uav_flights_date'), 'uav_flights', ['date'], unique=False)
    op.create_index(op.f('ix_uav_flights_landing_datetime'), 'uav_flights', ['landing_datetime'], unique=False)
    op.create_index(op.f('ix_uav_flights_takeoff_datetime'), 'uav_flights', ['takeoff_datetime'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_uav_flights_takeoff_datetime'), table_name='uav_flights')
    op.drop_index(op.f('ix_uav_flights_landing_datetime'), table_name='uav_flights')
    op.drop_index(op.f('ix_uav_flights_date'), table_name='uav_flights')
    op.drop_table('uav_flights')
    op.drop_table('regions')
    # ### end Alembic commands ###
