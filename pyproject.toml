[tool.poetry]
name = "fly-potato"
version = "0.1.0"
description = "Event management bot"
authors = [
    "andrejcyrkunov <andrey.pwn@gmail.com>",
    "D1ffic00lt <dm.filinov@gmail.com>",
    "yalpcode <sanyaa1aaa@yandex.ru>",
    "pur0ta <pur0ta@yandex.com>"
]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
sqlalchemy = "^2.0.39"
alembic = "^1.15.1"
asyncpg = "^0.30.0"
pydantic-settings = "^2.8.1"
greenlet = "^3.1.1"
pydantic = "^2.11.7"
geopy = "^2.4.1"
numpy = "^2.3.1"
faker = "^37.4.0"
colorlog = "^6.9.0"
httpx = "^0.28.1"
prometheus-client = "^0.22.1"
aiohttp = "^3.12.14"
openai = "^1.98.0"
fastapi = "^0.117.1"
uvicorn = "^0.37.0"
pandas = "^2.3.2"
openpyxl = "^3.1.5"
geoalchemy2 = "^0.18.0"
pyjwt = "^2.10.1"
python-multipart = "^0.0.20"
pyshp = "^2.3.1"
shapely = "^2.1.2"
psycopg2-binary = "^2.9.10"
pyproj = "^3.7.2"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
mypy = "^1.15.0"
ruff = "^0.11.4"
faker = "^37.4.0"
poetry-core = "^2.1.3"
pre-commit = "^4.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py312"]
skip-string-normalization = true
skip-magic-trailing-comma = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | alembic
)/
'''

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [".git", ".venv", "alembic", "build", "dist"]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"
avoid-escape = true

[tool.ruff.lint.isort]
combine-as-imports = false
detect-same-package = false
section-order = [
    'future',
    'standard-library',
    'third-party',
    'first-party',
    'local-folder',
]
known-first-party = [
    'backend',
]

[tool.mypy]
explicit_package_bases = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
cache_dir = "/tmp"
plugins = [
    "pydantic.mypy",
]
exclude = [
    "backend/routers/.*", # TODO: REMOVE THIS WHEN SOMEONE HAS FINISHED THIS MODULE
    "\\.venv",
    "alembic/.*",
    "scripts/.*"
]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]] # TODO: REMOVE THIS WHEN SOMEONE HAS FINISHED THIS MODULE
module = "backend.routers.*"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "alembic.*"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "scripts.*"
follow_imports = "skip"
